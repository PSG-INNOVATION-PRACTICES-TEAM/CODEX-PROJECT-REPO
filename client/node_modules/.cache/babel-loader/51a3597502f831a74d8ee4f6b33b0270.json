{"ast":null,"code":"var _jsxFileName = \"D:\\\\7th Semester\\\\PROJECT-WORK-PHASE-1\\\\CODEX-PROJECT-REPO\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\n// import { useState } from 'react';\n// import Editor from \"@monaco-editor/react\";\n// import Navbar from './Components/Navbar';\n// import Axios from 'axios';\n// import spinner from './spinner.svg';\n// const App=()=> {\n//   const [code, setCode] = useState(``);\n//   const [lang, setLang] = useState('python');\n//   const [theme, setTheme] = useState('vs-dark');\n//   const [fontSize, setFontSize] = useState(20);\n//   const [input, setInput] = useState(\"\");\n//   const [output, setOutput] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const options = {\n//     fontSize:fontSize\n//   }\n//   function compile() {\n//     setLoading(true);\n//     if(code === ``){\n//       return\n//     }\n//     Axios.post(`http://localhost:5000/compile`, {\n//       code: code,\n//       language: lang,\n//       input:input\n//     }).then((response) => {\n//       setOutput(response.data.output);\n//     }).then(() => {\n//       setLoading(false);\n//     });\n//   }\n//   function clearOutput() {\n//     setOutput(\"\");\n//   }\n//   return (\n//     <div className=\"App\">\n//       <Navbar\n//         lang={lang} setLang={setLang}\n//         theme={theme} setTheme={setTheme}\n//         fontSize={fontSize} setFontSize={setFontSize}\n//       />\n//       <div className=\"main\">\n//           <div className=\"left-container\">\n//             <Editor\n//                 options={options}\n//                 height=\"calc(100vh-50px)\"\n//                 width=\"100%\"\n//                 theme={theme}\n//                 language={lang}\n//                 defaultLanguage=\"python\"\n//                 defaultValue='# Enter Your Code'\n//                 onChange={(value)=> {setCode(value)}}\n//             />\n//             <button className=\"run-btn\" onClick={()=>compile()}>\n//               Run\n//             </button>\n//           </div>\n//           <div className=\"right-container\">\n//             <h4>Input : </h4>    \n//             <div className=\"input-box\">\n//               <textarea id=\"code-inp\" onChange={(e) => { setInput(e.target.value); }}>\n//               </textarea>\n//             </div>\n//             <h4>Output : </h4>\n//             {loading ? (\n//               <div className=\"spinner-box\">\n//                 <img src={spinner} alt=\"Loading...\" />\n//               </div>\n//               ) :\n//               (\n//                 <div className=\"output-box\">\n//                   <pre>{output}</pre>\n//                   <button onClick={() => { clearOutput() }} className=\"clear-btn\">\n//                     Clear\n//                   </button>\n//                 </div>\n//               )}\n//           </div>\n//         </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport { useState } from 'react';\nimport './App.css'; // import Editor from \"@monaco-editor/react\";\n\nimport Navbar from './Components/Navbar';\nimport Axios from 'axios';\nimport spinner from './spinner.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State variable to set users source code\n  const [userCode, setUserCode] = useState(``); // State variable to set editors default language\n\n  const [userLang, setUserLang] = useState(\"python\"); // State variable to set editors default theme\n\n  const [userTheme, setUserTheme] = useState(\"vs-dark\"); // State variable to set editors default font size\n\n  const [fontSize, setFontSize] = useState(20); // State variable to set users input\n\n  const [userInput, setUserInput] = useState(\"\"); // State variable to set users output\n\n  const [userOutput, setUserOutput] = useState(\"\"); // Loading state variable to show spinner\n  // while fetching data\n\n  const [loading, setLoading] = useState(false);\n  const options = {\n    fontSize: fontSize\n  }; // Function to call the compile endpoint\n\n  function compile() {\n    setLoading(true);\n\n    if (userCode === ``) {\n      return;\n    } // Post request to compile endpoint\n\n\n    Axios.post(`http://localhost:8000/compile`, {\n      code: userCode,\n      language: userLang,\n      input: userInput\n    }).then(res => {\n      setUserOutput(res.data.output);\n    }).then(() => {\n      setLoading(false);\n    });\n  } // Function to clear the output screen\n\n\n  function clearOutput() {\n    setUserOutput(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      userLang: userLang,\n      setUserLang: setUserLang,\n      userTheme: userTheme,\n      setUserTheme: setUserTheme,\n      fontSize: fontSize,\n      setFontSize: setFontSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          options: options,\n          height: \"calc(100vh - 50px)\",\n          width: \"100%\",\n          theme: userTheme,\n          language: userLang,\n          defaultLanguage: \"python\",\n          defaultValue: \"# Enter your code here\",\n          onChange: value => {\n            setUserCode(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-btn\",\n          onClick: () => compile(),\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"code-inp\",\n            onChange: e => setUserInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 3\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spinner,\n            alt: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 4\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: userOutput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              clearOutput();\n            },\n            className: \"clear-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"DGV0CZ6GLvF5toI02DKJEmp+c4w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Axios","spinner","App","userCode","setUserCode","userLang","setUserLang","userTheme","setUserTheme","fontSize","setFontSize","userInput","setUserInput","userOutput","setUserOutput","loading","setLoading","options","compile","post","code","language","input","then","res","data","output","clearOutput","value","e","target"],"sources":["D:/7th Semester/PROJECT-WORK-PHASE-1/CODEX-PROJECT-REPO/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useState } from 'react';\n// import Editor from \"@monaco-editor/react\";\n// import Navbar from './Components/Navbar';\n// import Axios from 'axios';\n// import spinner from './spinner.svg';\n// const App=()=> {\n//   const [code, setCode] = useState(``);\n//   const [lang, setLang] = useState('python');\n//   const [theme, setTheme] = useState('vs-dark');\n//   const [fontSize, setFontSize] = useState(20);\n//   const [input, setInput] = useState(\"\");\n//   const [output, setOutput] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const options = {\n//     fontSize:fontSize\n//   }\n\n//   function compile() {\n//     setLoading(true);\n//     if(code === ``){\n//       return\n//     }\n\n//     Axios.post(`http://localhost:5000/compile`, {\n//       code: code,\n//       language: lang,\n//       input:input\n//     }).then((response) => {\n//       setOutput(response.data.output);\n//     }).then(() => {\n//       setLoading(false);\n//     });\n//   }\n\n//   function clearOutput() {\n//     setOutput(\"\");\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <Navbar\n//         lang={lang} setLang={setLang}\n//         theme={theme} setTheme={setTheme}\n//         fontSize={fontSize} setFontSize={setFontSize}\n//       />\n//       <div className=\"main\">\n//           <div className=\"left-container\">\n//             <Editor\n//                 options={options}\n//                 height=\"calc(100vh-50px)\"\n//                 width=\"100%\"\n//                 theme={theme}\n//                 language={lang}\n//                 defaultLanguage=\"python\"\n//                 defaultValue='# Enter Your Code'\n//                 onChange={(value)=> {setCode(value)}}\n//             />\n//             <button className=\"run-btn\" onClick={()=>compile()}>\n//               Run\n//             </button>\n//           </div>\n//           <div className=\"right-container\">\n//             <h4>Input : </h4>    \n//             <div className=\"input-box\">\n//               <textarea id=\"code-inp\" onChange={(e) => { setInput(e.target.value); }}>\n//               </textarea>\n//             </div>\n//             <h4>Output : </h4>\n//             {loading ? (\n//               <div className=\"spinner-box\">\n//                 <img src={spinner} alt=\"Loading...\" />\n//               </div>\n//               ) :\n//               (\n//                 <div className=\"output-box\">\n//                   <pre>{output}</pre>\n//                   <button onClick={() => { clearOutput() }} className=\"clear-btn\">\n//                     Clear\n//                   </button>\n//                 </div>\n//               )}\n//           </div>\n//         </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport { useState } from 'react';\nimport './App.css';\n// import Editor from \"@monaco-editor/react\";\nimport Navbar from './Components/Navbar';\nimport Axios from 'axios';\nimport spinner from './spinner.svg';\n\nfunction App() {\n\n// State variable to set users source code\nconst [userCode, setUserCode] = useState(``);\n\n// State variable to set editors default language\nconst [userLang, setUserLang] = useState(\"python\");\n\n// State variable to set editors default theme\nconst [userTheme, setUserTheme] = useState(\"vs-dark\");\n\n// State variable to set editors default font size\nconst [fontSize, setFontSize] = useState(20);\n\n// State variable to set users input\nconst [userInput, setUserInput] = useState(\"\");\n\n// State variable to set users output\nconst [userOutput, setUserOutput] = useState(\"\");\n\n// Loading state variable to show spinner\n// while fetching data\nconst [loading, setLoading] = useState(false);\n\nconst options = {\n\tfontSize: fontSize\n}\n\n// Function to call the compile endpoint\nfunction compile() {\n\tsetLoading(true);\n\tif (userCode === ``) {\n\treturn\n\t}\n\n\t// Post request to compile endpoint\n\tAxios.post(`http://localhost:8000/compile`, {\n\tcode: userCode,\n\tlanguage: userLang,\n\tinput: userInput }).then((res) => {\n\tsetUserOutput(res.data.output);\n\t}).then(() => {\n\tsetLoading(false);\n\t})\n}\n\n// Function to clear the output screen\nfunction clearOutput() {\n\tsetUserOutput(\"\");\n}\n\nreturn (\n\t<div className=\"App\">\n\t<Navbar\n\t\tuserLang={userLang} setUserLang={setUserLang}\n\t\tuserTheme={userTheme} setUserTheme={setUserTheme}\n\t\tfontSize={fontSize} setFontSize={setFontSize}\n\t/>\n\t<div className=\"main\">\n\t\t<div className=\"left-container\">\n\t\t<Editor\n\t\t\toptions={options}\n\t\t\theight=\"calc(100vh - 50px)\"\n\t\t\twidth=\"100%\"\n\t\t\ttheme={userTheme}\n\t\t\tlanguage={userLang}\n\t\t\tdefaultLanguage=\"python\"\n\t\t\tdefaultValue=\"# Enter your code here\"\n\t\t\tonChange={(value) => { setUserCode(value) }}\n\t\t/>\n\t\t<button className=\"run-btn\" onClick={() => compile()}>\n\t\t\tRun\n\t\t</button>\n\t\t</div>\n\t\t<div className=\"right-container\">\n\t\t<h4>Input:</h4>\n\t\t<div className=\"input-box\">\n\t\t\t<textarea id=\"code-inp\" onChange=\n\t\t\t{(e) => setUserInput(e.target.value)}>\n\t\t\t</textarea>\n\t\t</div>\n\t\t<h4>Output:</h4>\n\t\t{loading ? (\n\t\t\t<div className=\"spinner-box\">\n\t\t\t<img src={spinner} alt=\"Loading...\" />\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div className=\"output-box\">\n\t\t\t<pre>{userOutput}</pre>\n\t\t\t<button onClick={() => { clearOutput() }}\n\t\t\t\tclassName=\"clear-btn\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t\t</div>\n\t\t)}\n\t\t</div>\n\t</div>\n\t</div>\n);\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}