{"ast":null,"code":"var _jsxFileName = \"D:\\\\7th Semester\\\\PROJECT-WORK-PHASE-1\\\\CODEX-PROJECT-REPO\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport Editor from \"@monaco-editor/react\";\nimport Navbar from './Components/Navbar';\nimport Axios from 'axios';\nimport spinner from './spinner.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useState(``);\n  const [lang, setLang] = useState('python');\n  const [theme, setTheme] = useState('vs-dark');\n  const [fontSize, setFontSize] = useState(20);\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const options = {\n    fontSize: fontSize\n  };\n\n  function compile() {\n    setLoading(true);\n\n    if (code === ``) {\n      return;\n    }\n\n    Axios.post(`http://localhost:5000/compile`, {\n      code: code,\n      language: lang,\n      input: input\n    }).then(response => {\n      setOutput(response.data.output);\n    }).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function clearOutput() {\n    setOutput(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZXFBLi5WPJqdpR3meEmJpQEExpE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Editor","Navbar","Axios","spinner","App","code","setCode","lang","setLang","theme","setTheme","fontSize","setFontSize","input","setInput","output","setOutput","loading","setLoading","options","compile","post","language","then","response","data","clearOutput"],"sources":["D:/7th Semester/PROJECT-WORK-PHASE-1/CODEX-PROJECT-REPO/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport Editor from \"@monaco-editor/react\";\nimport Navbar from './Components/Navbar';\nimport Axios from 'axios';\nimport spinner from './spinner.svg';\nconst App=()=> {\n  const [code, setCode] = useState(``);\n  const [lang, setLang] = useState('python');\n  const [theme, setTheme] = useState('vs-dark');\n  const [fontSize, setFontSize] = useState(20);\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const options = {\n    fontSize:fontSize\n  }\n\n  function compile() {\n    setLoading(true);\n    if(code === ``){\n      return\n    }\n\n    Axios.post(`http://localhost:5000/compile`, {\n      code: code,\n      language: lang,\n      input:input\n    }).then((response) => {\n      setOutput(response.data.output);\n    }).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function clearOutput() {\n    setOutput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1></h1>\n      {/* <Navbar\n        lang={lang} setLang={setLang}\n        theme={theme} setTheme={setTheme}\n        fontSize={fontSize} setFontSize={setFontSize}\n      />\n        <div className=\"main\">\n          <div className=\"left-container\">\n            <Editor\n                options={options}\n                height=\"calc(100vh-50px)\"\n                width=\"100%\"\n                theme={theme}\n                language={lang}\n                defaultLanguage=\"python\"\n                defaultValue='# Enter Your Code'\n                onChange={(value)=> {setCode(value)}}\n            />\n            <button className=\"run-btn\" onClick={()=>compile()}>\n              Run\n            </button>\n          </div>\n          <div className=\"right-container\">\n            <h4>Input : </h4>    \n            <div className=\"input-box\">\n              <textarea id=\"code-inp\" onChange={(e) => { setInput(e.target.value); }}>\n              </textarea>\n            </div>\n            <h4>Output : </h4>\n            {loading ? (\n              <div className=\"spinner-box\">\n                <img src={spinner} alt=\"Loading...\" />\n              </div>\n              ) :\n              (\n                <div className=\"output-box\">\n                  <pre>{output}</pre>\n                  <button onClick={() => { clearOutput() }} className=\"clear-btn\">\n                    Clear\n                  </button>\n                </div>\n              )}\n          </div>\n        </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AACA,MAAMC,GAAG,GAAC,MAAK;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAE,EAAF,CAAhC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,QAAD,CAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,SAAD,CAAlC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMoB,OAAO,GAAG;IACdR,QAAQ,EAACA;EADK,CAAhB;;EAIA,SAASS,OAAT,GAAmB;IACjBF,UAAU,CAAC,IAAD,CAAV;;IACA,IAAGb,IAAI,KAAM,EAAb,EAAe;MACb;IACD;;IAEDH,KAAK,CAACmB,IAAN,CAAY,+BAAZ,EAA4C;MAC1ChB,IAAI,EAAEA,IADoC;MAE1CiB,QAAQ,EAAEf,IAFgC;MAG1CM,KAAK,EAACA;IAHoC,CAA5C,EAIGU,IAJH,CAISC,QAAD,IAAc;MACpBR,SAAS,CAACQ,QAAQ,CAACC,IAAT,CAAcV,MAAf,CAAT;IACD,CAND,EAMGQ,IANH,CAMQ,MAAM;MACZL,UAAU,CAAC,KAAD,CAAV;IACD,CARD;EASD;;EAED,SAASQ,WAAT,GAAuB;IACrBV,SAAS,CAAC,EAAD,CAAT;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgDD,CAlFD;;GAAMZ,G;;KAAAA,G;AAoFN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}